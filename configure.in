dnl Process this file with autoconf to produce a configure script.
AC_INIT()

#
# check for some programs we use
#
AC_PROG_CC

#
# should we use mesa
#
AC_ARG_WITH(mesa,
         [  --with-mesa             use the mesa opengl package])

AC_ARG_WITH(gl,
         [  --without-gl            do not use the gl graphics classes])

AC_ARG_WITH(shared,
         [  --with-shared           create shared libraries for vtk])

AC_ARG_WITH(tcl,
         [  --with-tcl              build vtk the tcl based interpreter],
         tcldir=tcl
         BUILD_TCL=build_tcl
         CLEAN_TCL=clean_tcl)

AC_SUBST(BUILD_TCL)
AC_SUBST(CLEAN_TCL)

AC_ARG_WITH(java,
         [  --with-java             very buggy build vtk with java support],
         javadir=java
         BUILD_JAVA=build_java
         CLEAN_JAVA=clean_java)

AC_SUBST(BUILD_JAVA)
AC_SUBST(CLEAN_JAVA)

AC_ARG_WITH(graphics,
         [  --without-graphics      do not include the graphics classes],,
         graphicsdir=graphics
         BUILD_GRAPHICS=build_graphics
         DEPEND_GRAPHICS=depend_graphics
         CLEAN_GRAPHICS=clean_graphics)

AC_SUBST(DEPEND_GRAPHICS)
AC_SUBST(BUILD_GRAPHICS)
AC_SUBST(CLEAN_GRAPHICS)

AC_ARG_WITH(imaging,
         [  --without-imaging       do not include the imaging classes],,
         imagingdir=imaging
         BUILD_IMAGING=build_imaging
         DEPEND_IMAGING=depend_imaging
         CLEAN_IMAGING=clean_imaging)

AC_SUBST(BUILD_IMAGING)
AC_SUBST(DEPEND_IMAGING)
AC_SUBST(CLEAN_IMAGING)

AC_ARG_WITH(patented,
         [  --with-patented           include the patented classes],
         patenteddir=patented
         BUILD_PATENTED=build_patented
         DEPEND_PATENTED=depend_patented
         CLEAN_PATENTED=clean_patented,)

AC_SUBST(BUILD_PATENTED)
AC_SUBST(DEPEND_PATENTED)
AC_SUBST(CLEAN_PATENTED)

AC_ARG_WITH(volume,
         [  --with-volume           include the volume classes],
         volumedir=volume
         BUILD_VOLUME=build_volume
         DEPEND_VOLUME=depend_volume
         CLEAN_VOLUME=clean_volume,)

AC_SUBST(BUILD_VOLUME)
AC_SUBST(DEPEND_VOLUME)
AC_SUBST(CLEAN_VOLUME)

AC_ARG_WITH(borescope,
         [  --with-borescope        include the borescope classes],
         borescopedir=borescope
         BUILD_BORESCOPE=build_borescope
         DEPEND_BORESCOPE=depend_borescope
         CLEAN_BORESCOPE=clean_borescope,)

AC_SUBST(BUILD_BORESCOPE)
AC_SUBST(DEPEND_BORESCOPE)
AC_SUBST(CLEAN_BORESCOPE)

AC_ARG_WITH(contrib,
         [  --with-contrib          include the contrib classes],
         contribdir=contrib
         BUILD_CONTRIB=build_contrib
         DEPEND_CONTRIB=depend_contrib
         CLEAN_CONTRIB=clean_contrib,)

AC_SUBST(BUILD_CONTRIB)
AC_SUBST(DEPEND_CONTRIB)
AC_SUBST(CLEAN_CONTRIB)

AC_ARG_WITH(geae,
         [  --with-geae             include the geae classes],
         geaedir=geae
         BUILD_GEAE=build_geae
         DEPEND_GEAE=depend_geae
         CLEAN_GEAE=clean_geae,)

AC_SUBST(BUILD_GEAE)
AC_SUBST(DEPEND_GEAE)
AC_SUBST(CLEAN_GEAE)

AC_ARG_WITH(gemsip,
         [  --with-gemsip           include the gemsip classes],
         gemsipdir=gemsip
         BUILD_GEMSIP=build_gemsip
         DEPEND_GEMSIP=depend_gemsip
         CLEAN_GEMSIP=clean_gemsip,)

AC_SUBST(BUILD_GEMSIP)
AC_SUBST(DEPEND_GEMSIP)
AC_SUBST(CLEAN_GEMSIP)

AC_ARG_WITH(gemsio,
         [  --with-gemsio           include the gemsio classes],
         gemsiodir=gemsio
         BUILD_GEMSIO=build_gemsio
         DEPEND_GEMSIO=depend_gemsio
         CLEAN_GEMSIO=clean_gemsio,)

AC_SUBST(BUILD_GEMSIO)
AC_SUBST(DEPEND_GEMSIO)
AC_SUBST(CLEAN_GEMSIO)

AC_ARG_WITH(gemsvolume,
         [  --with-gemsvolume       include the gemsvolume classes],
         gemsvolumedir=gemsvolume
         BUILD_GEMSVOLUME=build_gemsvolume
         DEPEND_GEMSVOLUME=depend_gemsvolume
         CLEAN_GEMSVOLUME=clean_gemsvolume,)

AC_SUBST(BUILD_GEMSVOLUME)
AC_SUBST(DEPEND_GEMSVOLUME)
AC_SUBST(CLEAN_GEMSVOLUME)

AC_CONFIG_SUBDIRS(common $tcldir $graphicsdir $imagingdir $borescopedir $volumedir $contribdir $geaedir $gemsipdir $gemsiodir $gemsvolumedir $javadir)

#------------------------------------------------------------------------------
#       Some make programs require includes to be 
#         .include "file"
#     others...
#         include file
#------------------------------------------------------------------------------

AC_MSG_CHECKING(how make handles includes)
cat > confmakeinc <<EOF

EOF
  cat > confmakefile <<EOF
include confmakeinc

all:
EOF

if make -f confmakefile >/dev/null 2>/dev/null; then
    MAKEINCLUDE="include"
    MAKEQUOTE=''
    AC_MSG_RESULT(common make include syntax)
else
    MAKEINCLUDE=".include"
    MAKEQUOTE='"'
    AC_MSG_RESULT(BSD make include syntax)
fi
rm confmakefile confmakeinc

AC_SUBST(MAKEINCLUDE)
AC_SUBST(MAKEQUOTE)


#------------------------------------------------------------------------------
#       If Config.mk is not in the build directory, copy it local.
#------------------------------------------------------------------------------

if test ! -r Config.mk
then
    echo "Copying $srcdir/Config.mk to build directory"
    cp $srcdir/Config.mk  Config.mk || exit 1
fi

AC_OUTPUT(Makefile)





