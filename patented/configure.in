#
# configure script for vtk source directory
#
AC_INIT(vtkSliceCubes.cxx)


if test ! -r targets.make
then
    echo "Copying $srcdir/targets.make to build directory"
    cp $srcdir/targets.make targets.make || exit 1
fi

# option for handling BSD style makefile includes
#
AC_ARG_WITH(bsdmake,
         [  --with-bsdmake            uses bsd style makefile includes],
         MAKEINCLUDE=".include"
         MAKEQUOTE='"',
         MAKEINCLUDE="include"
         MAKEQUOTE='')
AC_SUBST(MAKEINCLUDE)
AC_SUBST(MAKEQUOTE)

AC_ARG_WITH(shared,
         [  --with-shared               create shared libraries],
         [vtk_shared_ok=$withval], [vtk_shared_ok=no])

AC_ARG_WITH(patented,
         [  --with-patented           include the patented classes],
	 if test "$withval" = yes -a "$vtk_shared_ok" != no; then
         USE_PATENTED_GRAPHICS_PYTHON_TARGET="libVTKPatentedPython${SHLIB_SUFFIX} : ../graphics/libVTKGraphics${SHLIB_SUFFIX}"
         USE_PATENTED_GRAPHICS_TCL_TARGET="libVTKPatentedTcl${SHLIB_SUFFIX} : ../graphics/libVTKGraphics${SHLIB_SUFFIX}"
         USE_PATENTED_GRAPHICS_LIBS="-L\${VTK_OBJ}/graphics -lVTKGraphics"
         fi,)

AC_SUBST(USE_PATENTED_GRAPHICS_PYTHON_TARGET)
AC_SUBST(USE_PATENTED_GRAPHICS_TCL_TARGET)
AC_SUBST(USE_PATENTED_GRAPHICS_LIBS)

AC_CONFIG_SUBDIRS(tcl java python)

dnl Checks for library functions.
AC_OUTPUT(Makefile)
