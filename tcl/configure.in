#
# configure script for vtk source directory
#
AC_INIT(concrete.l)

#
# check for some programs we use
#
AC_PROG_CC
AC_PROG_CXX
AC_ISC_POSIX
AC_PROG_RANLIB
AC_PROG_LN_S
AC_PROG_LEX
AC_PROG_YACC

#
# Checks for header files.
#
AC_HEADER_STDC

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_STRUCT_TM

# Find the X include directories and libraries
AC_PATH_XTRA

# get byte swapping info
AC_C_BIGENDIAN

if test $ac_cv_c_bigendian = yes; then
  BIGENDIAN="-DWORDS_BIGENDIAN"
fi
AC_SUBST(BIGENDIAN)

##########################
##			##
##	Starbase	##
##			##
##########################
use_sbr=no
AC_CHECK_HEADERS(starbase.c.h, [use_sbr=yes])

if test "$use_sbr" = "yes"; then
	SBR_LIBS="-ldld -lXwindow -lsb -lXhp11"
	SBR_FLAGS="-DUSE_SBR ${SBR_INCLUDE}"
else
	SBR_LIBS=""
	SBR_FLAGS=""
fi
AC_SUBST(SBR_LIBS)
AC_SUBST(SBR_FLAGS)

##########################
##			##
##	SGI GL		##
##			##
##########################
use_glr=no
AC_CHECK_HEADERS(gl/gl.h, [use_glr=yes])
AC_ARG_WITH(gl,
         [  --without-gl          do not use the gl graphics classes],
         [use_glr=no])

if test "$use_glr" = "yes"; then
	GLR_LIBS="-lgl"
	GLR_FLAGS="-DUSE_GLR ${GLR_INCLUDE}"
else
	GLR_LIBS=""
	GLR_FLAGS=""
fi
AC_SUBST(GLR_LIBS)
AC_SUBST(GLR_FLAGS)

##########################
##			##
##	OpenGL		##
##			##
##########################
use_oglr=no
# check for mesa
use_mesa_oglr=no
AC_ARG_WITH(mesa,
         [  --with-mesa               use the mesa opengl package],
         [use_oglr=yes]
	 [use_mesa_oglr=yes])

OGLR_INCLUDE=""
AC_CHECK_HEADERS(GL/gl.h, [use_oglr=yes])
AC_CHECK_HEADERS(/usr/openwin/share/include/GL/glxmd.h, 
		[use_oglr=yes]
		OGLR_INCLUDE="-I/usr/openwin/share/include/")

if test "$use_oglr" = "yes"; then

	if test "$use_mesa_oglr" = "yes"; then
		OGLR_LIBS="\${MESA_LIB}"
		OGLR_FLAGS="\${MESA_INCLUDE} -DUSE_OGLR"
	else
		OGLR_LIBS="-lGL"
		OGLR_FLAGS="-DUSE_OGLR ${OGLR_INCLUDE}"
	fi
else
	OGLR_LIBS=""
	OGLR_FLAGS=""
fi
AC_SUBST(OGLR_INCLUDE)
AC_SUBST(OGLR_FLAGS)
AC_SUBST(OGLR_LIBS)

##########################
##			##
##	   XGL		##
##			##
##########################
use_xglr=no
# Check if the user set up XGL_HOME
if test "X$XGL_HOME" = "X" ; then
	XGL_HOME=/opt/SUNWits/Graphics-sw/xgl
fi

AC_CHECK_HEADERS($XGL_HOME/include/xgl/xgl.h, [use_xglr=yes])
AC_CHECK_HEADERS(/usr/openwin/include/xgl/xgl.h, [use_xglr=yes])
if test "$use_xglr" = "yes"; then
	XGLR_LIBS="-lxgl"
	XGLR_FLAGS="-DUSE_XGLR ${XGLR_INCLUDE}"
else
	XGLR_LIBS=""
	XGLR_FLAGS=""
fi
AC_SUBST(XGLR_LIBS)
AC_SUBST(XGLR_FLAGS)
AC_SUBST(XGL_HOME)

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_STRUCT_TM

# Find the X include directories and libraries
AC_PATH_XTRA

#------------------------------------------------------------------------------
#       Some make programs require includes to be 
#         .include "file"
#     others...
#         include file
#------------------------------------------------------------------------------
AC_MSG_CHECKING(how make handles includes)
cat > confmakeinc <<EOF

EOF
  cat > confmakefile <<EOF
include confmakeinc

all:
EOF

if make -f confmakefile >/dev/null 2>/dev/null; then
    MAKEINCLUDE="include"
    MAKEQUOTE=''
    AC_MSG_RESULT(common make include syntax)
else
    MAKEINCLUDE=".include"
    MAKEQUOTE='"'
    AC_MSG_RESULT(BSD make include syntax)
fi
rm confmakefile confmakeinc

AC_SUBST(MAKEINCLUDE)
AC_SUBST(MAKEQUOTE)

# the following is an excerpt from the tcl7.5b2 configure.in
#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	dynamic loading and shared libraries:
#
#	SHLIB_CFLAGS -	Flags to pass to cc when compiling the components
#			of a shared library (may request position-independent
#			code, among other things).
#	SHLIB_LD -	Base command to use for combining object files
#			into a shared library.
#	SHLIB_LD_LIBS -	Dependent libraries for the linker to scan when
#			creating shared libraries.  This symbol typically
#			goes at the end of the "ld" commands that build
#			shared libraries. The value of the symbol if
#			"${LIBS}" if all of the dependent libraries should
#			be specified when creating a shared library.  If
#			dependent libraries should not be specified (as on
#			SunOS 4.x, where they cause the link to fail, or in
#			general if Tcl and Tk aren't themselves shared
#			libraries), then this symbol has an empty string
#			as its value.
#	SHLIB_SUFFIX -	Suffix to use for the name of the shared library.  An
#			empty string means we don't know how to use shared
#			libraries on this platform.
#	SHLIB_VERSION -	If this platform *requires* shared libraries to end
#			in a version string, this provides a default version
#			string to use;  it is an empty string on platforms
#			where it isn't needed.
#	LD_FLAGS -	Flags to pass to the compiler when linking object
#			files into an executable application binary such
#			as tclsh.
#	LD_SEARCH_FLAGS-Flags to pass to ld, such as "-R /usr/local/tcl/lib",
#			that tell the run-time dynamic linker where to look
#			for shared libraries such as libtcl.so.  Depends on
#			the variable LIB_INSTALL_DIR in the Makefile.
#--------------------------------------------------------------------

# Step 1: set the variable "system" to hold the name and version number
# for the system.  This can usually be done via the "uname" command, but
# there are a few systems, like Next, where this doesn't work.

AC_MSG_CHECKING([system version (for dynamic loading)])
if test -f /usr/lib/NextStep/software_version; then
  system=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`
else
    system=`uname -s`-`uname -r`
    if test "$?" -ne 0 ; then
	AC_MSG_RESULT([unknown (can't find uname command)])
	system=unknown
    else
	# Special check for weird MP-RAS system (uname returns weird
	# results, and the version is kept in special file).
    
	if test -r /etc/.relid -a "X`uname -n`" = "X`uname -s`" ; then
	    system=MP-RAS-`awk '{print $3}' /etc/.relid'`
	fi
	AC_MSG_RESULT($system)
    fi
fi

# Step 2: check for existence of -ldl library.  This is needed because
# Linux can use either -ldl or -ldld for dynamic loading.

AC_CHECK_LIB(dl, dlopen, have_dl=yes, have_dl=no)

# Step 3: disable dynamic loading if requested via a command-line switch.

AC_ARG_ENABLE(load, [  --disable-load          disallow dynamic loading and "load" command],
    [tcl_ok=$enableval], [tcl_ok=yes])
if test "$tcl_ok" = "no"; then
    system=unknown
fi

# Step 4: set configuration options based on system name and version.

fullSrcDir=`cd $srcdir; pwd`
mustUseSharedLibs=no
case $system in
    AIX-*)
	# AIX: can't link shared library extensions unless Tcl and Tk are
	# also shared libraries.
	mustUseSharedLibs=yes
	SHLIB_CFLAGS=""
	SHLIB_LD="$fullSrcDir/ldAix /bin/ld -e _nostart -berok -bM:SRE -bE:lib.exp -H512 -T512"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX="..o"
	SHLIB_VERSION=""
	DL_LIBS=""
        AC_CHECK_LIB(ld,printf, DL_LIBS="-lld")
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    HP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)
	SHLIB_CFLAGS="+z"
	SHLIB_LD="ld -b"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".sl"
	SHLIB_VERSION=""
	DL_LIBS="-ldld"
	LD_FLAGS="-Wl,-E"
	LD_SEARCH_FLAGS='-Wl,+b,${LIB_INSTALL_DIR}'
	;;
    IRIX-4.*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_SUFFIX="..o"
	SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | tclsh -r -G 0"
	SHLIB_LD_LIBS=""
	SHLIB_VERSION=""
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS='-rpath ${LIB_INSTALL_DIR}'
	;;
    IRIX-5.*)
	SHLIB_CFLAGS=""
	SHLIB_LD="ld -shared -rdata_shared"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    IRIX-64-6*)
	SHLIB_CFLAGS=""
	SHLIB_LD="ld -shared -rdata_shared"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    Linux*)
	SHLIB_CFLAGS="-fPIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	if test "$have_dl" = yes; then
	    SHLIB_LD="${CC} -shared"
	    DL_LIBS="-ldl"
	    LD_FLAGS="-rdynamic"
	    LD_SEARCH_FLAGS=""
	else
	    AC_CHECK_HEADER(dld.h, [
		SHLIB_LD="ld -shared"
		DL_LIBS="-ldld"
		LD_FLAGS=""
		LD_SEARCH_FLAGS=""])
	fi
	;;
    MP-RAS-02*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    MP-RAS-*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS="-ldl"
	LD_FLAGS="-Wl,-Bexport"
	LD_SEARCH_FLAGS=""
	;;
    NetBSD-*|FreeBSD-*)
	# Not available on all versions:  check for include file.
	if test -f /usr/include/dlfcn.h; then
	    SHLIB_CFLAGS="-fpic"
	    SHLIB_LD="ld -Bshareable"
	    SHLIB_LD_LIBS=""
	    SHLIB_SUFFIX=".so"
	    SHLIB_VERSION=".1.0"
	    DL_LIBS=""
	    LD_FLAGS=""
	    LD_SEARCH_FLAGS=""
	else
	    SHLIB_CFLAGS=""
	    SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | tclsh -r -G 0"
	    SHLIB_LD_LIBS=""
	    SHLIB_SUFFIX="..o"
	    SHLIB_VERSION=""
	    DL_LIBS=""
	    LD_FLAGS=""
	    LD_SEARCH_FLAGS=""
	fi
	;;
    NEXTSTEP-*)
	SHLIB_CFLAGS=""
	SHLIB_LD="cc -nostdlib -r"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-1.[012])
	# OSF/1 1.[012] from OSF, and derivatives, including Paragon OSF/1
	SHLIB_CFLAGS=""
	# Hack: make package name same as library name
	SHLIB_LD='ld -R -export $@:'
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-1.*)
	# OSF/1 1.3 from OSF using ELF, and derivatives, including AD2
	SHLIB_CFLAGS="-fpic"
	SHLIB_LD="ld -shared"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-V*)
        # Digital OSF/1
	SHLIB_CFLAGS=""
	SHLIB_LD='ld -shared -expect_unresolved "*"'
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    RISCos-*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | tclsh -r -G 0"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX="..o"
	SHLIB_VERSION=""
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS=""
	;;
    SCO_SV-3.2*)
        # Note, dlopen is available only on SCO 3.2.5 and greater.  However,
        # this test works, since "uname -s" was non-standard in 3.2.4 and
        # below.
	SHLIB_CFLAGS="-Kpic -belf"
	SHLIB_LD="ld -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS=""
	LD_FLAGS="-belf -Wl,-Bexport"
	LD_SEARCH_FLAGS=""
	;;
     SINIX*5.4*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    SunOS-4*)
	SHLIB_CFLAGS="-PIC"
	SHLIB_LD="ld"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    SunOS-5*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="/usr/ccs/bin/ld -G -z text"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-R ${LIB_INSTALL_DIR}'
	;;
    ULTRIX-4.*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_SUFFIX="..o"
	SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | tclsh -r -G 0"
	SHLIB_LD_LIBS=""
	SHLIB_VERSION=""
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS=""
	;;
    UNIX_SV*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	SHLIB_VERSION=""
	DL_LIBS="-ldl"
	LD_FLAGS="-Wl,-Bexport"
	LD_SEARCH_FLAGS=""
	;;
esac

# If we're running gcc, then change the C flags for compiling shared
# libraries to the right flags for gcc, instead of those for the
# standard manufacturer compiler.
if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
  SHLIB_CFLAGS="-fPIC"
fi

#
# use shared libs
#
AC_ARG_WITH(shared,
         [  --with-shared               create shared libraries],
    [vtk_shared_ok=yes], [vtk_shared_ok=no])

# what toolkits should we use
AC_ARG_WITH(graphics,
         [  --without-graphics      do not include the graphics classes],
         [vtk_use_graphics=no], 
         [vtk_use_graphics=yes] 
         USE_GRAPHICS_LIBS="-L../graphics -lVTKGraphicsTcl"
         USE_GRAPHICS_FLAG="-I$(srcdir)/../graphics -DUSE_GRAPHICS")

AC_ARG_WITH(imaging,
         [  --without-imaging       do not include the imaging classes],
         [vtk_use_imaging=no], 
         [vtk_use_imaging=yes] 
         USE_IMAGING_LIBS="-L../imaging -lVTKImagingTcl"
         USE_IMAGING_FLAG="-I$(srcdir)/../imaging -DUSE_IMAGING")

AC_ARG_WITH(patented,
         [  --with-patented          include the patented classes],
         [vtk_use_patented=yes] 
         USE_PATENTED_LIBS="-L../patented -lVTKPatentedTcl"
         USE_PATENTED_FLAG="-I$(srcdir)/../patented -DUSE_PATENTED",
         [vtk_use_patented=no])

AC_ARG_WITH(volume,
         [  --with-volume          include the volume classes],
         [vtk_use_volume=yes] 
         USE_VOLUME_LIBS="-L../volume -lVTKVolumeTcl"
         USE_VOLUME_FLAG="-I$(srcdir)/../volume -DUSE_VOLUME",
         [vtk_use_volume=no])

AC_ARG_WITH(borescope,
         [  --with-borescope        include the borescope classes],
         [vtk_use_borescope=yes] 
         USE_BORESCOPE_LIBS="-L../borescope -lVTKBorescopeTcl"
         USE_BORESCOPE_FLAG="-I$(srcdir)/../borescope -DUSE_BORESCOPE",
         [vtk_use_borescope=no]) 

AC_ARG_WITH(contrib,
         [  --with-contrib        include the contrib classes],
         [vtk_use_contrib=yes] 
         USE_CONTRIB_LIBS="-L../contrib -lVTKContribTcl"
         USE_CONTRIB_FLAG="-I$(srcdir)/../contrib -DUSE_CONTRIB",
         [vtk_use_contrib=no]) 

AC_ARG_WITH(geae,
         [  --with-geae        include the geae classes],
         [vtk_use_geae=yes] 
         USE_GEAE_LIBS="-L../geae -lVTKGeaeTcl"
         USE_GEAE_FLAG="-I$(srcdir)/../geae -DUSE_GEAE",
         [vtk_use_geae=no]) 

AC_ARG_WITH(gemsip,
         [  --with-gemsip        include the gemsip classes],
         [vtk_use_gemsip=yes] 
         USE_GEMSIP_LIBS="-L../gemsip -lVTKGemsipTcl"
         USE_GEMSIP_FLAG="-I$(srcdir)/../gemsip -DUSE_GEMSIP",
         [vtk_use_gemsip=no]) 

AC_ARG_WITH(gemsio,
         [  --with-gemsio        include the gemsio classes],
         [vtk_use_gemsio=yes] 
         USE_GEMSIO_LIBS="-L../gemsio -lVTKGemsioTcl"
         USE_GEMSIO_FLAG="-I$(srcdir)/../gemsio -DUSE_GEMSIO",
         [vtk_use_gemsio=no]) 

AC_ARG_WITH(gemsvolume,
         [  --with-gemsvolume    include the gemsvolume classes],
         [vtk_use_gemsvolume=yes] 
         USE_GEMSVOLUME_LIBS="-L../gemsvolume -lVTKGemsvolumeTcl"
         USE_GEMSVOLUME_FLAG="-I$(srcdir)/../gemsvolume -DUSE_GEMSVOLUME",
         [vtk_use_gemsvolume=no]) 

USE_GRAPHICS_DEPENDS=""
USE_IMAGING_DEPENDS=""
USE_PATENTED_DEPENDS=""
USE_VOLUME_DEPENDS=""
USE_BORESCOPE_DEPENDS=""
USE_CONTRIB_DEPENDS=""
USE_GEAE_DEPENDS=""
USE_GEMSIP_DEPENDS=""
USE_GEMSIO_DEPENDS=""
USE_GEMSVOLUME_DEPENDS=""
COMMON_DEPENDS=""
VTK_TCL_SHLIB_TARGET=""

if test "$vtk_shared_ok" = "yes"; then
    VTK_SHLIB_CFLAGS="${SHLIB_CFLAGS}"
    VTK_LD_SEARCH_FLAGS="${LD_SEARCH_FLAGS}"
    VTK_TCL_SHLIB_TARGET="vtktcl"
    RANLIB=":"
else
    SHLIB_LD_LIBS=""
    VTK_SHLIB_CFLAGS=""
    VTK_LD_SEARCH_FLAGS=""
    COMMON_DEPENDS="../common/libVTKCommonTcl.a"
    if test "$vtk_use_graphics" = "yes"; then
       USE_GRAPHICS_DEPENDS="../graphics/libVTKGraphicsTcl.a"
    fi
    if test "$vtk_use_imaging" = "yes"; then
       USE_IMAGING_DEPENDS="../imaging/libVTKImagingTcl.a"
    fi
    if test "$vtk_use_patented" = "yes"; then
       USE_PATENTED_DEPENDS="../patented/libVTKPatentedTcl.a"
    fi
    if test "$vtk_use_volume" = "yes"; then
       USE_VOLUME_DEPENDS="../volume/libVTKVolumeTcl.a"
    fi
    if test "$vtk_use_borescope" = "yes"; then
       USE_BORESCOPE_DEPENDS="../borescope/libVTKBorescopeTcl.a"
    fi
    if test "$vtk_use_contrib" = "yes"; then
       USE_CONTRIB_DEPENDS="../contrib/libVTKContribTcl.a"
    fi
    if test "$vtk_use_geae" = "yes"; then
       USE_GEAE_DEPENDS="../geae/libVTKGeaeTcl.a"
    fi
    if test "$vtk_use_gemsip" = "yes"; then
       USE_GEMSIP_DEPENDS="../gemsip/libVTKGemsipTcl.a"
    fi
    if test "$vtk_use_gemsio" = "yes"; then
       USE_GEMSIO_DEPENDS="../gemsio/libVTKGemsioTcl.a"
    fi
    if test "$vtk_use_gemsvolume" = "yes"; then
       USE_GEMSVOLUME_DEPENDS="../gemsvolume/libVTKGemsvolumeTcl.a"
    fi
fi

AC_SUBST(VTK_TCL_SHLIB_TARGET)

AC_SUBST(USE_GRAPHICS_FLAG)
AC_SUBST(USE_GRAPHICS_LIBS)
AC_SUBST(USE_GRAPHICS_DEPENDS)

AC_SUBST(USE_IMAGING_FLAG)
AC_SUBST(USE_IMAGING_LIBS)
AC_SUBST(USE_IMAGING_DEPENDS)

AC_SUBST(USE_PATENTED_FLAG)
AC_SUBST(USE_PATENTED_LIBS)
AC_SUBST(USE_PATENTED_DEPENDS)

AC_SUBST(USE_VOLUME_FLAG)
AC_SUBST(USE_VOLUME_LIBS)
AC_SUBST(USE_VOLUME_DEPENDS)

AC_SUBST(USE_BORESCOPE_FLAG)
AC_SUBST(USE_BORESCOPE_LIBS)
AC_SUBST(USE_BORESCOPE_DEPENDS)

AC_SUBST(USE_CONTRIB_FLAG)
AC_SUBST(USE_CONTRIB_LIBS)
AC_SUBST(USE_CONTRIB_DEPENDS)

AC_SUBST(USE_GEAE_FLAG)
AC_SUBST(USE_GEAE_LIBS)
AC_SUBST(USE_GEAE_DEPENDS)

AC_SUBST(USE_GEMSIP_FLAG)
AC_SUBST(USE_GEMSIP_LIBS)
AC_SUBST(USE_GEMSIP_DEPENDS)

AC_SUBST(USE_GEMSIO_FLAG)
AC_SUBST(USE_GEMSIO_LIBS)
AC_SUBST(USE_GEMSIO_DEPENDS)

AC_SUBST(USE_GEMSVOLUME_FLAG)
AC_SUBST(USE_GEMSVOLUME_LIBS)
AC_SUBST(USE_GEMSVOLUME_DEPENDS)

AC_SUBST(VTK_SHLIB_CFLAGS)
AC_SUBST(COMMON_DEPENDS)
AC_SUBST(SHLIB_LD)
AC_SUBST(DL_LIBS)
AC_SUBST(SHLIB_LD_LIBS)
AC_SUBST(SHLIB_SUFFIX)
AC_SUBST(SHLIB_VERSION)

USE_TKWIDGET_FLAG=""
if test "$vtk_use_graphics" = "yes"; then
  AC_ARG_WITH(tkwidget,
         [  --with-tkwidget           build the vtkTkRenderWidget class],
	 USE_TKWIDGET_FLAG=-DUSE_TKWIDGET)
fi
AC_SUBST(USE_TKWIDGET_FLAG)

##########################
##			##
## Check thread support ##
##			##
##########################
THREAD_LIBS=""
THREAD_FLAGS=""
use_sproc=no
AC_CHECK_HEADERS(sys/prctl.h, [use_sproc=yes])
if test "$use_sproc" = "yes"; then
case $system in
    IRIX*)
	THREAD_FLAGS="-DVTK_USE_SPROC"
	;;
esac
fi

use_pthreads=no
AC_CHECK_HEADERS(pthread.h, [use_pthreads=yes])
if test "$use_pthreads" = "yes"; then
  if test "$use_sproc" = "no"; then
    AC_CHECK_LIB(pthreads, pthread_create, THREAD_LIBS="-lpthreads")
    AC_CHECK_LIB(pthread, pthread_create, THREAD_LIBS="-lpthread")
	THREAD_FLAGS="-DVTK_USE_PTHREADS"
  fi
fi

# on an HP with pthread we need to use -lcma
# on dec alphas we have had problems as well
if test "$use_pthreads" = "yes"; then
case $system in
    HP-UX-*.10.*)
	THREAD_LIBS="-lcma"
	;;
    OSF1-V*)
        THREAD_FLAGS=""
        THREAD_LIBS=""
        ;;
esac
fi

AC_SUBST(THREAD_FLAGS)
AC_SUBST(THREAD_LIBS)

# on an HP unsing the native CC we need special +d flag for inlines
VTK_INLINE_FLAGS=""
if test $ac_cv_prog_gxx = no; then
case $system in
    HP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)
	VTK_INLINE_FLAGS="+z"
        echo $ac_n "checking whether ${CXX} accepts +d""... $ac_c" 1>&6
        echo 'void f(){}' > conftest.cc
        if test -z "`${CXX} +d -c conftest.cc 2>&1`"; then
          echo "$ac_t""yes" 1>&6
          VTK_INLINE_FLAGS="+d"
        else
          echo "$ac_t""no" 1>&6
        fi
        rm -f conftest*
	;;
esac
fi
AC_SUBST(VTK_INLINE_FLAGS)

#
# on an HP using gcc with shared libraries we need to add a link flag
#
VTK_SHLIB_LINK_FLAGS=""
if test "$vtk_shared_ok" = "yes"; then
  if test $ac_cv_prog_gxx = yes; then
    case $system in
       HP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)
	  VTK_SHLIB_LINK_FLAGS="-Wl,+s"
	  ;;
    esac
  fi
fi
AC_SUBST(VTK_SHLIB_LINK_FLAGS)

dnl Checks for library functions.
AC_OUTPUT(Makefile)
